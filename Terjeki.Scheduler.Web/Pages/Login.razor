@layout AuthLayout
@page "/login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using Terjeki.Scheduler.Core
@using Terjeki.Scheduler.Web.Services
@inject IAuthService AuthService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject HttpClient Client
@inject NotificationService NotificationService
<RadzenStack Gap="1.5rem">
    <EditForm Model="form" OnValidSubmit="DoLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="content">
            <a href="/" id="header-logo"><img src="images/terjeki-busz-logo.svg" /></a>
            <span>Üdvözöljük a Terjéki Naptár programban</span>

            <div class="form-input">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">E-mail</RadzenText>
                <RadzenTextBox @bind-Value="form.Email"
                Style="width:100%;min-width:300px" />
                <ValidationMessage For="@(() => form.Email)" />
            </div>

            <div class="form-input">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Jelszó</RadzenText>
                <RadzenPassword @bind-Value="form.Password"
                Style="width:100%;min-width:300px" />
                <ValidationMessage For="@(() => form.Password)" />
            </div>

            <RadzenButton Text="Bejelentkezés"
            ButtonStyle="ButtonStyle.Primary"
            Type="ButtonType.Submit"
            Style="min-width:300px" />
            <RadzenLink Path="/forgot-password"
                        Style="font-size:0.9em; margin-left:1rem;">
                Elfelejtetted a jelszavad?
            </RadzenLink>
        </div>
    </EditForm>

    <div class="text-center mt-4">
        <span>Még nincs fiókod?</span>
        <RadzenButton Text="Regisztráció"
        ButtonStyle="ButtonStyle.Primary"
        Click="() => NavigateRegister()" />
    </div>

    @if (!string.IsNullOrEmpty(error))
    {
        <div class="text-danger mt-2">@error</div>
    }
</RadzenStack>

@code {
    private LoginForm form = new();
    private string? error;



    void NavigateRegister()
    {
        Navigation.NavigateTo("/register");
    }
    private async Task DoLogin()
    {
        error = null;
        try
        {
            await AuthService.LoginAsync(new LoginDto(form.Email, form.Password));
            await AuthStateProvider.GetAuthenticationStateAsync();
           
            Navigation.NavigateTo("/");
        }
        catch (HttpRequestException ex)
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = ex.Message,
                    Duration = 2000
                });
        }
    }

}
